const express = require('express');
const router = express.Router();
const db = require('../db'); // db kết nối MySQL, hỗ trợ promise
const { success, error } = require('../utils/utils');

// GET bài viết theo danh sách category_id truyền qua query param
// Ví dụ: GET /api/posts?category_ids=1,2,3,4,5
router.get('/posts-by-categories', async (req, res) => {
  try {
    let { category_ids } = req.query;

    if (!category_ids) {
      return res.status(400).json({ code: 400, message: "Thiếu tham số category_ids" });
    }

    // Chuyển chuỗi "1,2,3" thành mảng số [1,2,3]
    const categoryIdsArray = category_ids.split(',').map(id => parseInt(id.trim())).filter(id => !isNaN(id));

    if (categoryIdsArray.length === 0) {
      return res.status(400).json({ code: 400, message: "Danh sách category_ids không hợp lệ" });
    }

    // Tạo chuỗi dấu hỏi (?) tương ứng số lượng phần tử để tránh SQL Injection
    const placeholders = categoryIdsArray.map(() => '?').join(',');

    const sql = `
      SELECT 
        c.id AS category_id, 
        c.title AS category_title, 
        i.*
      FROM jos_categories AS c
      JOIN jos_content AS i ON i.catid = c.id
      WHERE c.id IN (${placeholders})
        AND c.extension = 'com_content'
        AND i.state = 1
      ORDER BY c.id, i.created DESC
    `;

    const [results] = await db.promise().query(sql, categoryIdsArray);

    return success(res, "Lấy bài viết theo danh sách chuyên mục thành công", results);
  } catch (err) {
    console.error("Lỗi lấy bài viết theo danh sách category:", err);
    return error(res, err.message);
  }
});

module.exports = router;
